networks:
  turismoapp-internal:
    driver: bridge

volumes:
  postgres_data:
  couchdb_data:

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - turismoapp-internal

  couchdb:
    image: couchdb:3.3
    restart: unless-stopped
    ports:
      - "5985:5984"
    env_file:
      - .env
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    volumes:
      - couchdb_data:/opt/couchdb/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - turismoapp-internal

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3002:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      couchdb:
        condition: service_healthy
    networks:
      - turismoapp-internal

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3003:80"  # Cambiado de 3000 a 80 (puerto de Nginx)
    depends_on:
      - backend
    networks:
      - turismoapp-internal
